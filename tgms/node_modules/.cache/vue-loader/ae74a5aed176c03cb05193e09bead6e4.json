{"remainingRequest":"C:\\Users\\Md Arif Hasan\\Desktop\\spl2\\SPL2_TGMS\\SPL2_TGMS\\tgms\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Md Arif Hasan\\Desktop\\spl2\\SPL2_TGMS\\SPL2_TGMS\\tgms\\src\\components\\home2.vue?vue&type=template&id=19e6bc5a&scoped=true&","dependencies":[{"path":"C:\\Users\\Md Arif Hasan\\Desktop\\spl2\\SPL2_TGMS\\SPL2_TGMS\\tgms\\src\\components\\home2.vue","mtime":1654430258818},{"path":"C:\\Users\\Md Arif Hasan\\Desktop\\spl2\\SPL2_TGMS\\SPL2_TGMS\\tgms\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1654407432147},{"path":"C:\\Users\\Md Arif Hasan\\Desktop\\spl2\\SPL2_TGMS\\SPL2_TGMS\\tgms\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1654407483391},{"path":"C:\\Users\\Md Arif Hasan\\Desktop\\spl2\\SPL2_TGMS\\SPL2_TGMS\\tgms\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1654407432147},{"path":"C:\\Users\\Md Arif Hasan\\Desktop\\spl2\\SPL2_TGMS\\SPL2_TGMS\\tgms\\node_modules\\vue-loader\\lib\\index.js","mtime":1654407483388}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}